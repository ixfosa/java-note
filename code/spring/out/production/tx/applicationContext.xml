<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd"
        default-autowire="byName">

    <!-- 加载properties文件 -->
    <context:property-placeholder location="classpath:db.properties" />

    <!-- 配置数据源，读取properties文件信息 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.drive}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!-- 配置jdbc模板 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" />

    <!-- 配置 dao -->
    <bean id="accountDao" class="com.ixfosa.dao.impl.AccountDaoImpl" />


    <!-- 配置 service -->
    <bean id="accountService" class="com.ixfosa.service.impl.AccountServiceImpl" />

    <!--配置 测试类 -->
    <bean id="test" class="com.ixfosa.test.Test" />

    <!-- 事务管理器，依赖于数据源 -->
    <bean id="txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager" />

    <!-- 编写通知：对事务进行增强（通知），需要编写切入点和具体执行事务的细节 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!--
            给切入点方法添加事务详情，
            name表示方法名称，
            *表示任意方法名称，
            propagation用于设置传播行为，
            read-only表示隔离级别，是否只读
        -->
        <tx:attributes>
            <tx:method name="ins*" />
            <tx:method name="del*" />
            <tx:method name="upd*" />
            <tx:method name="*"
                       rollback-for="Exception"
                       propagation="REQUIRED"
                       isolation="DEFAULT"
                       read-only="false" />
        </tx:attributes>
    </tx:advice>

    <!-- aop编写，让Spring自动对目标生成代理，需要使用AspectJ的表达式 -->
    <aop:config>
        <!-- 切入点 -->
        <aop:pointcut expression="execution(* com.ixfosa.service.*.*(..))" id="txPointCut" />
        <!-- 切面：将切入点与通知整合 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut" />
    </aop:config>
</beans>